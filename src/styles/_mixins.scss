// @version 1.2
@use "sass:meta";
@use "sass:string";
@use "sass:math";
@use "sass:list";

@function is-number($value) {
  @return meta.type-of($value) == 'number';
}

@function is-percentage($value) {
  @return is-number($value) and math.unit($value) == '%';
}

@function is-pixels($value) {
  @return is-number($value) and unit($value) == 'px';
}

@function opposite($side) {
  @if $side == top {
    @return bottom;
  } @else if $side == bottom {
    @return top;
  } @else if $side == right {
    @return left;
  } @else if $side == left {
    @return right;
  }
}

@function strip-unit($number) {
  @if meta.type-of($number) == 'number' and not math.is-unitless($number) {
    @return math.div($number, ($number * 0 + 1));
  }

  @return $number;
}

@mixin animate($property, $time) {
  -webkit-transition: $property $time ease-out;
  -moz-transition: $property $time ease-out;
  -o-transition: $property $time ease-out;
  transition: $property $time ease-out;
}

@mixin angle($x, $y, $z) {
  -webkit-transform: matrix3d($x, $y, $z);
  -moz-transform: matrix3d($x, $y, $z);
  -o-transform: matrix3d($x, $y, $z);
  transform: matrix3d($x, $y, $z);
}

@mixin clearfix {
  display: table;
  position: relative;
  content: '';
  clear: both;
  height: 0;
  overflow: hidden;
}

@mixin border-radius($value) {
  -webkit-border-radius: $value;
  -moz-border-radius: $value;
  border-radius: $value;;
}

@mixin translateY($value) {
  -webkit-transform: translateY($value);
  -moz-transform: translateY($value);
  -ms-transform: translateY($value);
  -o-transform: translateY($value);
  transform: translateY($value);
}

@mixin translateX($value) {
  -webkit-transform: translateX($value);
  -moz-transform: translateX($value);
  -ms-transform: translateX($value);
  -o-transform: translateX($value);
  transform: translateX($value);
}

@mixin shadow($length, $opacity) {
  -webkit-box-shadow: $length $length $length 0 rgba(0, 0, 0, $opacity);
  -moz-box-shadow: $length $length $length 0 rgba(0, 0, 0, $opacity);
  -o-box-shadow: $length $length $length 0 rgba(0, 0, 0, $opacity);
  box-shadow: $length $length $length 0 rgba(0, 0, 0, $opacity);
}

@mixin text-shadow($length, $opacity) {
  text-shadow: $length $length $length rgba(0, 0, 0, $opacity);
}

@mixin maintain-ratio($ratio: 1 1, $wide, $percent:true) {
  @if list.length($ratio) < 2 or list.length($ratio) > 2 {
    @warn "$ratio must be a list with two values.";
  }

  @if math.is-unitless($wide) == false {
    @warn "$wide must be unitless";
  }

  @if $percent == true {
    $width: math.div($wide, 100);
    $height: math.div(list.nth($ratio, 2), list.nth($ratio, 1)) * $width;

    width: math.percentage(strip-unit($width));
    padding-bottom: math.percentage(strip-unit($height));
  } @else {
    $width: $wide;
    $height: math.div(list.nth($ratio, 2), list.nth($ratio, 1)) * $width;

    width: $width + 0px;
    padding-bottom: $height + 0px;
  }

  height: 0;
}

@mixin respond-to($device, $alt_device) {

  @if $alt_device == null {
    @if ($device == web) {
      @media only screen and (min-width: 993px) {
        @content
      }
    } @else if ($device == tablet) {
      @media only screen and (min-width: 601px) and (max-width: 992px) {
        @content
      }
    } @else if ($device == phone) {
      @media only screen and (max-width: 600px) {
        @content
      }
    }
  } @else {

    $phone: false;
    $tablet: false;
    $web: false;


    $index: string.index($device, web);
    $alt_index: string.index($alt_device, web);

    @if is-number($index) or is-number($alt_index) {
      $web: true;
    }

    $index: string.index($device, tablet);
    $alt_index: string.index($alt_device, tablet);

    @if is-number($index) or is-number($alt_index) {
      $tablet: true;
    }

    $index: string.index($device, phone);
    $alt_index: string.index($alt_device, phone);

    @if is-number($index) or is-number($alt_index) {
      $phone: true;
    }

    @if $phone and $tablet {
      @media only screen and (max-width: 992px) {
        @content
      }
    } @else if $tablet and $web {
      @media only screen and (min-width: 600px) {
        @content
      }
    } @else {
      @warn 'es neta??? no creo que necesites un media query si vas a abarcar de móvil a web ¬_¬';
    }
  }
}

@mixin caret($side, $size, $color) {
  @if is-pixels($size) == false {
    @warn "el tamaño debe estar en pixeles";
  }

  $opposite: opposite($side);
  display: block;
  position: absolute;
  border: $size solid transparent;
  border-#{$opposite}: $size solid $color;
  border-#{$side}: 0;
  height: 0;
  width: 0;
  #{$side}: -($size - 1px);
  content: '';
}

@mixin rotate($value) {
  -webkit-transform: rotate($value);
  -moz-transform: rotate($value);
  -ms-transform: rotate($value);
  -o-transform: rotate($value);
  transform: rotate($value);
}

@mixin columns($cols, $width: false, $gap: 20px, $rule: false) {
  -webkit-column-count: $cols;
  -moz-column-count: $cols;
  column-count: $cols;
  @if ($rule) {
    -webkit-column-rule: 1px solid black;
    -moz-column-rule: 1px solid black;
    column-rule: 1px solid black;
  }
  @if ($width) {
    -webkit-column-width: $width;
    -moz-column-width: $width;
    column-width: $width;
  }
  -webkit-column-gap: $gap;
  -moz-column-gap: $gap;
  column-gap: $gap;
}

@mixin aspect-ratio($ratio, $width: 100%, $image: false, $adjust: false) {
  @if list.length($ratio) != 2 {
    @warn "ratio must have two values";
  }

  $height: 0 !default;

  @if is-percentage($width) {

    $h: math.percentage(math.div(list.nth($ratio, 2), list.nth($ratio, 1)));
    $height: math.div((strip-unit($h) * strip-unit($width)), 100) * 1%;

  } @else {

    $height: math.div(nth($ratio, 2), nth($ratio, 1)) * $width;
  }

  position: relative;
  display: block;
  width: $width;
  height: 0;
  padding-bottom: $height;
  overflow: hidden;
  @if ($image) {
    img {
      display: block;
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      margin: auto;
      @if $adjust == high {
        height: 100%;
        width: auto;
        max-width: none;
        left: 50%;
        @include translateX(-50%);
      } @else if $adjust == max {
        height: auto;
        width: auto;
        max-width: 100%;
        max-height: 100%;
      } @else {
        width: 100%;
        height: auto;
      }
    }
  }
}